
'''
About the scording system

1.theory:
1.suppose there exists a word X
the properties that we would like to know about X are - 
    1. the number of times it has occured (defined)
    2. 

2.practice:

3. types of tests design and animation of each test.
    1.test types: spelling tests
    test:
        1. hard to easy ( understand the context of the word):
            assume  you have a word, and you don't understand what it means - (read a paragraph. that uses the word in an engaging way) - 
            then, after that let the user the explain the meaning of the HARD word, in simpler words

            but on the other hand, we have technical terms, such as an electron - we have to figure out what to do with those, 
            either detect and detect such a word, or detect it and ...attach a tag to it, specifing it's type (ie. technical)


        2. easy to hard:
            have an explanation of a word in simpler terms, and have the the user write out the complex - similar word in "harder" terms
'''
practical: 
    1. add a word to the database in route
    2. build a proper pythonic class for test and could be it's child
    3. return json formatted data, inherited from test --> to display on the web.


note : 
    * when a word definition is returned, filter for the best definition that fits you -->
    suppose there are words you aren't used to (that you have low score of), show them more, or less depending on a spectrum im guessing.
    